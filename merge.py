# Сортировка слиянием
#  Использует принцип: "разделяй и властвуй".

#  Работает следующим образом:
# 1. Разделение:
#     - Если массив состоит из одного элемента или является пустым,
#       он уже считается отсортированным и возвращается как есть.
#     - В противном случае, массив делится на две примерно равные части.
# 2. Рекурсивная сортировка:
#     - Каждая из полученных частей рекурсивно сортируется с помощью того же алгоритма сортировки слиянием.
# 3. Слияние:
#     - После того как две части отсортированы, они объединяются в один отсортированный массив.


def merge_sort(arr):
    if len(arr) > 1:
        center = len(arr) // 2  # середина списка
        left = arr[:center]  # левая половина
        right = arr[center:]  # правая половина

        merge_sort(left)
        merge_sort(right)

        i = j = k = 0
        # Слияние отсортированных половин
        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                arr[k] = left[i]
                i += 1
            else:
                arr[k] = right[j]
                j += 1
            k += 1

        # Проверяем, остались ли элементы
        while i < len(left):
            arr[k] = left[i]
            i += 1
            k += 1

        while j < len(right):
            arr[k] = right[j]
            j += 1
            k += 1
       

a = [38, 27, 100, 150, 43, 3, 9, 82, 10]
merge_sort(a)
print(a)
